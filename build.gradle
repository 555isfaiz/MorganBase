plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

// dependencies {
//     // implementation fileTree(dir: 'lib', include: ['*.jar'])
//     implementation 'io.netty:netty-all:4.1.97.Final'
//     implementation 'org.zeromq:jeromq:0.5.3'
//     implementation 'com.alibaba:fastjson:2.0.40'
//     implementation 'org.freemarker:freemarker:2.3.32'
//     testImplementation 'org.slf4j:slf4j-log4j12:2.0.9'
//     implementation 'org.slf4j:slf4j-api:2.0.9'
//     implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
//     implementation 'com.mysql:mysql-connector-j:8.1.0'
// }

processResources {
	from('MorganFirearm/src/main/resources') {
		include '*.dll'
	}
	from('config') {
		include '*.*'
	}
	from('MorganFirearm/src/main/resources') {
		include '*.*'
	}
}

task packFirearm(type: org.gradle.api.tasks.bundling.Jar) {
	archiveBaseName = 'firearms-build'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	dependencies {
		implementation project(':morgan-arch')
		implementation project(':MorganFirearm')
	}

	copy {
		from('config/')
		into('build/config')
	}
	from('config/') {
		include('*.xml')
	}
	from('morgan-arch/bin/classes/java/main/')
	from('MorganFirearm/src/main/resources')
	from('MorganFirearm/src/main/resources')

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	destinationDirectory = file('build/')
}
packFirearm.dependsOn(build)

jar.enabled = true
